1.python是一门解释型语言，是一门动态语言，在考虑每个文件怎么执行时，一定要牢记这个
2.对于类，其实它也是对象，它可以称之为type类型的对象，对于定义一个类,eg:创建其实例时，会首先看其自身是否含有__metaclass__变量或者其自身dict['__metaclass__']是否存在,若存在则调用它指向的类的创建定义去创建它,若不含有则调用其自身的__new__函数去创建，若其自身不含有__new__函数，则调用其父类的创建定义去创建它。
3.__new__是为了创建一个实例，而__init__是为了初始化一个实例,但是若是由__new__函数创建，默认不会调用，若类的定义中(class)采用了__metaclass__,则会调用一次,因为他相当于一个类变量.
4.注意什么是父类，什么是继承;它并不会在子类中定义,也即在类定义的时候，不会动态执行,但在利用其对象时会反向查找父类的属性和函数等信息，加以使用.
5.实例化一个类的过程:先调用自身的__new__，若不含有，则调用父类的__new__函数，初始化时，会依次调用自身及自己父类的__init__方法.若其调用的__new__不返回相应的对象，则返回的对象不具有相应的属性。
